@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@* @using System.Text *@
@* @using System.Text.Encodings.Web *@
@* @using Microsoft.AspNetCore.Identity *@
@* @using Microsoft.AspNetCore.WebUtilities *@
@* @using Bengbenz.Embassy.eServices.Server.Data *@
@* *@
@* @inject UserManager<ApplicationUser> UserManager *@
@* @inject IEmailSender<ApplicationUser> EmailSender *@
@* @inject NavigationManager NavigationManager *@
@* @inject IdentityRedirectManager RedirectManager *@

<PageTitle>Forgot your password?</PageTitle>

<h5 class="fw-bold pb-5 text-center">Mot de passe oublié ?</h5>
<div class="row gy-3 pt-3">
    <EditForm Model="@Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" role="alert" />

        <div class="col-xl-12">
            <MudTextField @bind-Value="Input.Email"
                          InputType="InputType.Email"
                          Variant="Variant.Outlined"
                          Label="Email"
                          autocomplete="username"
                          Required="true"/>
            <ValidationMessage For="() => Input.Email" class="text-danger"/>
        </div>
        <div class="col-xl-12 d-grid mt-5">
            <button type="submit" class="w-100 btn btn-lg btn-primary">Reset password</button>
        </div>
    </EditForm>
    <MudText Class="fs-14 text-muted mt-3">
        Mot de passe retrouvé ?
        <MudLink Class="text-primary fw-semibold" Href="Account/Login">Connectez-vous.</MudLink>
    </MudText>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        // var user = await UserManager.FindByEmailAsync(Input.Email);
        // if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        // {
        //     // Don't reveal that the user does not exist or is not confirmed
        //     RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        // }
        //
        // // For more information on how to enable account confirmation and password reset please
        // // visit https://go.microsoft.com/fwlink/?LinkID=532713
        // var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        // code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        // var callbackUrl = NavigationManager.GetUriWithQueryParameters(
        //     NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
        //     new Dictionary<string, object?> { ["code"] = code });
        //
        // await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));
        //
        // RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
